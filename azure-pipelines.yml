# Node.js React Web App to Linux on Azure
# Build a Node.js React app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'e3a2f88d-1a41-48be-b4cd-6ba2245065f6'

  # Web app name
  webAppName: 'legible-reader-web-client'
  
  # Environment name
  environmentName: 'legible-reader-web-client'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:            
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: legible-reader-web-client'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              WebAppName: $(webAppName)
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              RuntimeStack: 'NODE|10.10'
              StartupCommand: 'npm run build:start'
              ScriptType: 'Inline Script'
              InlineScript: |
                rm -rf package-lock.json node_modules
                npm install
                npm run build --if-present
              AppSettings: |
                -AUTOSUGGEST $(AUTOSUGGEST) 
                -SEARCH $(SEARCH) 
                -USERS $(USERS) 
                -BOOKS $(BOOKS) 
                -PAYMENT $(PAYMENT) 
                -AUTOSUGGEST_API_KEY $(AUTOSUGGEST_API_KEY) 
                -SEARCH_API_KEY $(SEARCH_API_KEY) 
                -STRIPE_API_KEY $(STRIPE_API_KEY)